
HandProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800200  000005e2  00000656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000724  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000170  00000000  00000000  00000764  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002fad  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000129d  00000000  00000000  00003881  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c73  00000000  00000000  00004b1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000454  00000000  00000000  00005794  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c76  00000000  00000000  00005be8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000019b1  00000000  00000000  0000685e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000188  00000000  00000000  0000820f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 ee       	ldi	r30, 0xE2	; 226
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 39       	cpi	r26, 0x9E	; 158
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e9       	ldi	r26, 0x9E	; 158
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 39       	cpi	r26, 0x9E	; 158
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	13 d1       	rcall	.+550    	; 0x346 <main>
 120:	5e c2       	rjmp	.+1212   	; 0x5de <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_ZN9bluetooth5setupEv>:
			return true;
		}
		return false;
	}
	void bluetooth::sendData(char *dataOut){
		UARTstring(dataOut);
 124:	60 e8       	ldi	r22, 0x80	; 128
 126:	75 e2       	ldi	r23, 0x25	; 37
 128:	84 c1       	rjmp	.+776    	; 0x432 <_ZN4Uart11setBaudRateE8BaudRate>
 12a:	08 95       	ret

0000012c <_ZN9bluetooth11sendCommandEPKc>:
 12c:	ef 92       	push	r14
 12e:	ff 92       	push	r15
 130:	0f 93       	push	r16
 132:	1f 93       	push	r17
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	7c 01       	movw	r14, r24
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	81 ee       	ldi	r24, 0xE1	; 225
 13e:	94 e0       	ldi	r25, 0x04	; 4
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <_ZN9bluetooth11sendCommandEPKc+0x14>
 148:	00 c0       	rjmp	.+0      	; 0x14a <_ZN9bluetooth11sendCommandEPKc+0x1e>
 14a:	00 00       	nop
 14c:	0e 2d       	mov	r16, r14
 14e:	1f 2d       	mov	r17, r15
 150:	40 e0       	ldi	r20, 0x00	; 0
 152:	c7 01       	movw	r24, r14
 154:	f8 d1       	rcall	.+1008   	; 0x546 <_ZN4Uart10UARTstringEPKcc>
 156:	41 e0       	ldi	r20, 0x01	; 1
 158:	65 e6       	ldi	r22, 0x65	; 101
 15a:	72 e0       	ldi	r23, 0x02	; 2
 15c:	c7 01       	movw	r24, r14
 15e:	f3 d1       	rcall	.+998    	; 0x546 <_ZN4Uart10UARTstringEPKcc>
 160:	f7 01       	movw	r30, r14
 162:	14 aa       	std	Z+52, r1	; 0x34
 164:	e7 01       	movw	r28, r14
 166:	e4 96       	adiw	r28, 0x34	; 52
 168:	fa ec       	ldi	r31, 0xCA	; 202
 16a:	ef 0e       	add	r14, r31
 16c:	f1 1c       	adc	r15, r1
 16e:	80 2f       	mov	r24, r16
 170:	91 2f       	mov	r25, r17
 172:	9f d1       	rcall	.+830    	; 0x4b2 <_ZN4Uart12checkForDataEv>
 174:	88 23       	and	r24, r24
 176:	49 f0       	breq	.+18     	; 0x18a <_ZN9bluetooth11sendCommandEPKc+0x5e>
 178:	ce 15       	cp	r28, r14
 17a:	df 05       	cpc	r29, r15
 17c:	31 f0       	breq	.+12     	; 0x18a <_ZN9bluetooth11sendCommandEPKc+0x5e>
 17e:	80 2f       	mov	r24, r16
 180:	91 2f       	mov	r25, r17
 182:	c9 d1       	rcall	.+914    	; 0x516 <_ZN4Uart11UARTreceiveEv>
 184:	89 93       	st	Y+, r24
 186:	19 82       	std	Y+1, r1	; 0x01
 188:	f2 cf       	rjmp	.-28     	; 0x16e <_ZN9bluetooth11sendCommandEPKc+0x42>
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	ff 90       	pop	r15
 196:	ef 90       	pop	r14
 198:	08 95       	ret

0000019a <_ZN9bluetooth10checkForOKEv>:
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	ec 01       	movw	r28, r24
 1a0:	bc 01       	movw	r22, r24
 1a2:	6c 5c       	subi	r22, 0xCC	; 204
 1a4:	7f 4f       	sbci	r23, 0xFF	; 255
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	ce d1       	rcall	.+924    	; 0x546 <_ZN4Uart10UARTstringEPKcc>
 1aa:	9c a9       	ldd	r25, Y+52	; 0x34
 1ac:	99 23       	and	r25, r25
 1ae:	b1 f0       	breq	.+44     	; 0x1dc <_ZN9bluetooth10checkForOKEv+0x42>
 1b0:	fe 01       	movw	r30, r28
 1b2:	f5 96       	adiw	r30, 0x35	; 53
 1b4:	9e 01       	movw	r18, r28
 1b6:	26 58       	subi	r18, 0x86	; 134
 1b8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ba:	03 c0       	rjmp	.+6      	; 0x1c2 <_ZN9bluetooth10checkForOKEv+0x28>
 1bc:	91 91       	ld	r25, Z+
 1be:	99 23       	and	r25, r25
 1c0:	79 f0       	breq	.+30     	; 0x1e0 <_ZN9bluetooth10checkForOKEv+0x46>
 1c2:	9f 34       	cpi	r25, 0x4F	; 79
 1c4:	21 f4       	brne	.+8      	; 0x1ce <_ZN9bluetooth10checkForOKEv+0x34>
 1c6:	80 81       	ld	r24, Z
 1c8:	8b 34       	cpi	r24, 0x4B	; 75
 1ca:	19 f4       	brne	.+6      	; 0x1d2 <_ZN9bluetooth10checkForOKEv+0x38>
 1cc:	0b c0       	rjmp	.+22     	; 0x1e4 <_ZN9bluetooth10checkForOKEv+0x4a>
 1ce:	9b 34       	cpi	r25, 0x4B	; 75
 1d0:	59 f0       	breq	.+22     	; 0x1e8 <_ZN9bluetooth10checkForOKEv+0x4e>
 1d2:	e2 17       	cp	r30, r18
 1d4:	f3 07       	cpc	r31, r19
 1d6:	91 f7       	brne	.-28     	; 0x1bc <_ZN9bluetooth10checkForOKEv+0x22>
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	07 c0       	rjmp	.+14     	; 0x1ea <_ZN9bluetooth10checkForOKEv+0x50>
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	05 c0       	rjmp	.+10     	; 0x1ea <_ZN9bluetooth10checkForOKEv+0x50>
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	03 c0       	rjmp	.+6      	; 0x1ea <_ZN9bluetooth10checkForOKEv+0x50>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	01 c0       	rjmp	.+2      	; 0x1ea <_ZN9bluetooth10checkForOKEv+0x50>
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <_ZN9bluetooth13setDeviceNameEPKc>:
 1f0:	0f 93       	push	r16
 1f2:	1f 93       	push	r17
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	e2 97       	sbiw	r28, 0x32	; 50
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	de bf       	out	0x3e, r29	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	cd bf       	out	0x3d, r28	; 61
 208:	8c 01       	movw	r16, r24
 20a:	88 e0       	ldi	r24, 0x08	; 8
 20c:	e0 e0       	ldi	r30, 0x00	; 0
 20e:	f2 e0       	ldi	r31, 0x02	; 2
 210:	de 01       	movw	r26, r28
 212:	11 96       	adiw	r26, 0x01	; 1
 214:	01 90       	ld	r0, Z+
 216:	0d 92       	st	X+, r0
 218:	8a 95       	dec	r24
 21a:	e1 f7       	brne	.-8      	; 0x214 <_ZN9bluetooth13setDeviceNameEPKc+0x24>
 21c:	fe 01       	movw	r30, r28
 21e:	39 96       	adiw	r30, 0x09	; 9
 220:	8a e2       	ldi	r24, 0x2A	; 42
 222:	df 01       	movw	r26, r30
 224:	1d 92       	st	X+, r1
 226:	8a 95       	dec	r24
 228:	e9 f7       	brne	.-6      	; 0x224 <_ZN9bluetooth13setDeviceNameEPKc+0x34>
 22a:	ce 01       	movw	r24, r28
 22c:	08 96       	adiw	r24, 0x08	; 8
 22e:	d0 d1       	rcall	.+928    	; 0x5d0 <strcpy>
 230:	be 01       	movw	r22, r28
 232:	6f 5f       	subi	r22, 0xFF	; 255
 234:	7f 4f       	sbci	r23, 0xFF	; 255
 236:	c8 01       	movw	r24, r16
 238:	79 df       	rcall	.-270    	; 0x12c <_ZN9bluetooth11sendCommandEPKc>
 23a:	c8 01       	movw	r24, r16
 23c:	ae df       	rcall	.-164    	; 0x19a <_ZN9bluetooth10checkForOKEv>
 23e:	e2 96       	adiw	r28, 0x32	; 50
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	08 95       	ret

00000254 <_ZN9bluetooth16setDeviceAsSlaveEv>:
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	ec 01       	movw	r28, r24
 25a:	68 e6       	ldi	r22, 0x68	; 104
 25c:	72 e0       	ldi	r23, 0x02	; 2
 25e:	66 df       	rcall	.-308    	; 0x12c <_ZN9bluetooth11sendCommandEPKc>
 260:	ce 01       	movw	r24, r28
 262:	9b df       	rcall	.-202    	; 0x19a <_ZN9bluetooth10checkForOKEv>
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <_ZN9bluetooth7getDataEPc>:
 26a:	ef 92       	push	r14
 26c:	ff 92       	push	r15
 26e:	0f 93       	push	r16
 270:	1f 93       	push	r17
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	7c 01       	movw	r14, r24
 278:	8b 01       	movw	r16, r22
 27a:	c0 e0       	ldi	r28, 0x00	; 0
 27c:	d0 e0       	ldi	r29, 0x00	; 0
 27e:	c7 01       	movw	r24, r14
 280:	29 d1       	rcall	.+594    	; 0x4d4 <_ZN4Uart13checkForData3Ev>
 282:	88 23       	and	r24, r24
 284:	59 f0       	breq	.+22     	; 0x29c <_ZN9bluetooth7getDataEPc+0x32>
 286:	c4 31       	cpi	r28, 0x14	; 20
 288:	d1 05       	cpc	r29, r1
 28a:	41 f0       	breq	.+16     	; 0x29c <_ZN9bluetooth7getDataEPc+0x32>
 28c:	21 96       	adiw	r28, 0x01	; 1
 28e:	c7 01       	movw	r24, r14
 290:	4a d1       	rcall	.+660    	; 0x526 <_ZN4Uart12UARTreceive3Ev>
 292:	f8 01       	movw	r30, r16
 294:	81 93       	st	Z+, r24
 296:	8f 01       	movw	r16, r30
 298:	11 82       	std	Z+1, r1	; 0x01
 29a:	f1 cf       	rjmp	.-30     	; 0x27e <_ZN9bluetooth7getDataEPc+0x14>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	1c 16       	cp	r1, r28
 2a0:	1d 06       	cpc	r1, r29
 2a2:	0c f0       	brlt	.+2      	; 0x2a6 <_ZN9bluetooth7getDataEPc+0x3c>
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	ff 90       	pop	r15
 2b0:	ef 90       	pop	r14
 2b2:	08 95       	ret

000002b4 <_ZN9bluetoothC1Ev>:
	}
	bluetooth::bluetooth(){
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	ec 01       	movw	r28, r24
 2ba:	60 e8       	ldi	r22, 0x80	; 128
 2bc:	75 e2       	ldi	r23, 0x25	; 37
 2be:	e8 d0       	rcall	.+464    	; 0x490 <_ZN4UartC1E8BaudRate>
		setup();
 2c0:	ce 01       	movw	r24, r28
 2c2:	30 df       	rcall	.-416    	; 0x124 <_ZN9bluetooth5setupEv>
	}
 2c4:	df 91       	pop	r29
 2c6:	cf 91       	pop	r28
 2c8:	08 95       	ret

000002ca <_Z8pwm_initv>:

void pwm_init()
{
	//define compare of register A & B on mode 3
	//mode 3 is setting the bit while up counting and clear the bit in down counting
	TCCR0A |= ( 1 << WGM01 | 1 << WGM00 | 1 << COM0A1);
 2ca:	84 b5       	in	r24, 0x24	; 36
 2cc:	83 68       	ori	r24, 0x83	; 131
 2ce:	84 bd       	out	0x24, r24	; 36
	TCCR1A |= ( 1 << WGM40 | 1 << COM4A1);
 2d0:	e0 e8       	ldi	r30, 0x80	; 128
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	80 81       	ld	r24, Z
 2d6:	81 68       	ori	r24, 0x81	; 129
 2d8:	80 83       	st	Z, r24
	TCCR5A |= ( 1 << WGM40 | 1 << COM4A1);
 2da:	e0 e2       	ldi	r30, 0x20	; 32
 2dc:	f1 e0       	ldi	r31, 0x01	; 1
 2de:	80 81       	ld	r24, Z
 2e0:	81 68       	ori	r24, 0x81	; 129
 2e2:	80 83       	st	Z, r24
	TCCR3A |= ( 1 << WGM40 | 1 << COM4A1);
 2e4:	e0 e9       	ldi	r30, 0x90	; 144
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	80 81       	ld	r24, Z
 2ea:	81 68       	ori	r24, 0x81	; 129
 2ec:	80 83       	st	Z, r24
	TCCR4A |= ( 1 << WGM40 | 1 << COM4A1);
 2ee:	e0 ea       	ldi	r30, 0xA0	; 160
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	81 68       	ori	r24, 0x81	; 129
 2f6:	80 83       	st	Z, r24

	//from prscaler by Fclk/1024  15.6 * 2 = 32 // timer/counter control register
	
	TCCR0B |= (1 << CS00) | (1 << CS02);
 2f8:	85 b5       	in	r24, 0x25	; 37
 2fa:	85 60       	ori	r24, 0x05	; 5
 2fc:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1 << CS40) | (1 << CS42) | (1 << WGM42);
 2fe:	e1 e8       	ldi	r30, 0x81	; 129
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	8d 60       	ori	r24, 0x0D	; 13
 306:	80 83       	st	Z, r24
	TCCR5B |= (1 << CS40) | (1 << CS42) | (1 << WGM42);
 308:	e1 e2       	ldi	r30, 0x21	; 33
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	80 81       	ld	r24, Z
 30e:	8d 60       	ori	r24, 0x0D	; 13
 310:	80 83       	st	Z, r24
	TCCR3B |= (1 << CS40) | (1 << CS42) | (1 << WGM42);
 312:	e1 e9       	ldi	r30, 0x91	; 145
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	8d 60       	ori	r24, 0x0D	; 13
 31a:	80 83       	st	Z, r24
	TCCR4B |= (1 << CS40) | (1 << CS42) | (1 << WGM42);
 31c:	e1 ea       	ldi	r30, 0xA1	; 161
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	8d 60       	ori	r24, 0x0D	; 13
 324:	80 83       	st	Z, r24

	//clear all interrupts
	TIFR0 = 7;
 326:	87 e0       	ldi	r24, 0x07	; 7
 328:	85 bb       	out	0x15, r24	; 21

	//setting PB7 PB6 PB5 PB4 PH6 as outputs

	//DDRB |= (1<<PB7);
	PDB7 = 1;
 32a:	27 9a       	sbi	0x04, 7	; 4
	PDB6 = 1;
 32c:	26 9a       	sbi	0x04, 6	; 4
	PDB5 = 1;
 32e:	25 9a       	sbi	0x04, 5	; 4
	PDL3 = 1;
 330:	ea e0       	ldi	r30, 0x0A	; 10
 332:	f1 e0       	ldi	r31, 0x01	; 1
 334:	80 81       	ld	r24, Z
 336:	88 60       	ori	r24, 0x08	; 8
 338:	80 83       	st	Z, r24
	PDH6 = 1;
 33a:	e1 e0       	ldi	r30, 0x01	; 1
 33c:	f1 e0       	ldi	r31, 0x01	; 1
 33e:	80 81       	ld	r24, Z
 340:	80 64       	ori	r24, 0x40	; 64
 342:	80 83       	st	Z, r24
 344:	08 95       	ret

00000346 <main>:
}


int main()
{
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	cd b7       	in	r28, 0x3d	; 61
 34c:	de b7       	in	r29, 0x3e	; 62
 34e:	c5 5d       	subi	r28, 0xD5	; 213
 350:	d1 09       	sbc	r29, r1
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	f8 94       	cli
 356:	de bf       	out	0x3e, r29	; 62
 358:	0f be       	out	0x3f, r0	; 63
 35a:	cd bf       	out	0x3d, r28	; 61
	pwm_init();
 35c:	b6 df       	rcall	.-148    	; 0x2ca <_Z8pwm_initv>
	
	PDB7 = 1;  // OC0A PIN 13
 35e:	27 9a       	sbi	0x04, 7	; 4
	PDB5 = 1;  // OC1A PIN 11
 360:	25 9a       	sbi	0x04, 5	; 4
	PDL3 = 1;  // OC5A PIN 38
 362:	ea e0       	ldi	r30, 0x0A	; 10
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	80 81       	ld	r24, Z
 368:	88 60       	ori	r24, 0x08	; 8
 36a:	80 83       	st	Z, r24
	PDE3 = 1; // OC3A PIN 5
 36c:	6b 9a       	sbi	0x0d, 3	; 13
	PDH3 = 1; // OC4A PIN 6
 36e:	e1 e0       	ldi	r30, 0x01	; 1
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	80 81       	ld	r24, Z
 374:	88 60       	ori	r24, 0x08	; 8
 376:	80 83       	st	Z, r24

	bluetooth Slave;
 378:	ce 01       	movw	r24, r28
 37a:	01 96       	adiw	r24, 0x01	; 1
 37c:	9b df       	rcall	.-202    	; 0x2b4 <_ZN9bluetoothC1Ev>
	Slave.setDeviceAsSlave();
 37e:	ce 01       	movw	r24, r28
 380:	01 96       	adiw	r24, 0x01	; 1
 382:	68 df       	rcall	.-304    	; 0x254 <_ZN9bluetooth16setDeviceAsSlaveEv>
	Slave.setDeviceName("Amir_Slave_Device");
 384:	6c e8       	ldi	r22, 0x8C	; 140
 386:	72 e0       	ldi	r23, 0x02	; 2
 388:	ce 01       	movw	r24, r28
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	31 df       	rcall	.-414    	; 0x1f0 <_ZN9bluetooth13setDeviceNameEPKc>
		if(Slave.getData(inData))
		{
			if (inData[0] == '*' && inData[6] == '*')
			{
				OCR0A = inData[1];
				OCR1A = inData[2];
 38e:	0f 2e       	mov	r0, r31
 390:	f8 e8       	ldi	r31, 0x88	; 136
 392:	af 2e       	mov	r10, r31
 394:	b1 2c       	mov	r11, r1
 396:	f0 2d       	mov	r31, r0
				OCR3A = inData[3];
 398:	0f 2e       	mov	r0, r31
 39a:	f8 e9       	ldi	r31, 0x98	; 152
 39c:	cf 2e       	mov	r12, r31
 39e:	d1 2c       	mov	r13, r1
 3a0:	f0 2d       	mov	r31, r0
				OCR4A = inData[4];
 3a2:	0f 2e       	mov	r0, r31
 3a4:	f8 ea       	ldi	r31, 0xA8	; 168
 3a6:	ef 2e       	mov	r14, r31
 3a8:	f1 2c       	mov	r15, r1
 3aa:	f0 2d       	mov	r31, r0
				OCR5A =	inData[5];
 3ac:	08 e2       	ldi	r16, 0x28	; 40
 3ae:	11 e0       	ldi	r17, 0x01	; 1
	Slave.setDeviceName("Amir_Slave_Device");
	char inData[10];
	// run forever
	while(1)
	{
		if(Slave.getData(inData))
 3b0:	be 01       	movw	r22, r28
 3b2:	64 53       	subi	r22, 0x34	; 52
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	57 df       	rcall	.-338    	; 0x26a <_ZN9bluetooth7getDataEPc>
 3bc:	88 23       	and	r24, r24
 3be:	c1 f3       	breq	.-16     	; 0x3b0 <main+0x6a>
		{
			if (inData[0] == '*' && inData[6] == '*')
 3c0:	c4 53       	subi	r28, 0x34	; 52
 3c2:	df 4f       	sbci	r29, 0xFF	; 255
 3c4:	88 81       	ld	r24, Y
 3c6:	cc 5c       	subi	r28, 0xCC	; 204
 3c8:	d0 40       	sbci	r29, 0x00	; 0
 3ca:	8a 32       	cpi	r24, 0x2A	; 42
 3cc:	89 f7       	brne	.-30     	; 0x3b0 <main+0x6a>
 3ce:	ce 52       	subi	r28, 0x2E	; 46
 3d0:	df 4f       	sbci	r29, 0xFF	; 255
 3d2:	88 81       	ld	r24, Y
 3d4:	c2 5d       	subi	r28, 0xD2	; 210
 3d6:	d0 40       	sbci	r29, 0x00	; 0
 3d8:	8a 32       	cpi	r24, 0x2A	; 42
 3da:	51 f7       	brne	.-44     	; 0x3b0 <main+0x6a>
			{
				OCR0A = inData[1];
 3dc:	c3 53       	subi	r28, 0x33	; 51
 3de:	df 4f       	sbci	r29, 0xFF	; 255
 3e0:	88 81       	ld	r24, Y
 3e2:	cd 5c       	subi	r28, 0xCD	; 205
 3e4:	d0 40       	sbci	r29, 0x00	; 0
 3e6:	87 bd       	out	0x27, r24	; 39
				OCR1A = inData[2];
 3e8:	c2 53       	subi	r28, 0x32	; 50
 3ea:	df 4f       	sbci	r29, 0xFF	; 255
 3ec:	88 81       	ld	r24, Y
 3ee:	ce 5c       	subi	r28, 0xCE	; 206
 3f0:	d0 40       	sbci	r29, 0x00	; 0
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	f5 01       	movw	r30, r10
 3f6:	91 83       	std	Z+1, r25	; 0x01
 3f8:	80 83       	st	Z, r24
				OCR3A = inData[3];
 3fa:	c1 53       	subi	r28, 0x31	; 49
 3fc:	df 4f       	sbci	r29, 0xFF	; 255
 3fe:	88 81       	ld	r24, Y
 400:	cf 5c       	subi	r28, 0xCF	; 207
 402:	d0 40       	sbci	r29, 0x00	; 0
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	f6 01       	movw	r30, r12
 408:	91 83       	std	Z+1, r25	; 0x01
 40a:	80 83       	st	Z, r24
				OCR4A = inData[4];
 40c:	c0 53       	subi	r28, 0x30	; 48
 40e:	df 4f       	sbci	r29, 0xFF	; 255
 410:	88 81       	ld	r24, Y
 412:	c0 5d       	subi	r28, 0xD0	; 208
 414:	d0 40       	sbci	r29, 0x00	; 0
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	f7 01       	movw	r30, r14
 41a:	91 83       	std	Z+1, r25	; 0x01
 41c:	80 83       	st	Z, r24
				OCR5A =	inData[5];
 41e:	cf 52       	subi	r28, 0x2F	; 47
 420:	df 4f       	sbci	r29, 0xFF	; 255
 422:	88 81       	ld	r24, Y
 424:	c1 5d       	subi	r28, 0xD1	; 209
 426:	d0 40       	sbci	r29, 0x00	; 0
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	f8 01       	movw	r30, r16
 42c:	91 83       	std	Z+1, r25	; 0x01
 42e:	80 83       	st	Z, r24
 430:	bf cf       	rjmp	.-130    	; 0x3b0 <main+0x6a>

00000432 <_ZN4Uart11setBaudRateE8BaudRate>:
		_str[i] = UARTreceive();
		i++;
	}
	_str[i] = 0;
	return *_str;
}
 432:	cb 01       	movw	r24, r22
 434:	a0 e0       	ldi	r26, 0x00	; 0
 436:	b0 e0       	ldi	r27, 0x00	; 0
 438:	88 0f       	add	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	aa 1f       	adc	r26, r26
 43e:	bb 1f       	adc	r27, r27
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	aa 1f       	adc	r26, r26
 446:	bb 1f       	adc	r27, r27
 448:	9c 01       	movw	r18, r24
 44a:	ad 01       	movw	r20, r26
 44c:	22 0f       	add	r18, r18
 44e:	33 1f       	adc	r19, r19
 450:	44 1f       	adc	r20, r20
 452:	55 1f       	adc	r21, r21
 454:	22 0f       	add	r18, r18
 456:	33 1f       	adc	r19, r19
 458:	44 1f       	adc	r20, r20
 45a:	55 1f       	adc	r21, r21
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	74 e2       	ldi	r23, 0x24	; 36
 460:	84 ef       	ldi	r24, 0xF4	; 244
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	84 d0       	rcall	.+264    	; 0x56e <__udivmodsi4>
 466:	21 50       	subi	r18, 0x01	; 1
 468:	31 09       	sbc	r19, r1
 46a:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 46e:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 472:	98 e9       	ldi	r25, 0x98	; 152
 474:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 478:	86 e0       	ldi	r24, 0x06	; 6
 47a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 47e:	30 93 35 01 	sts	0x0135, r19	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
 482:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
 486:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
 48a:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
 48e:	08 95       	ret

00000490 <_ZN4UartC1E8BaudRate>:
 490:	fc 01       	movw	r30, r24
 492:	ab 01       	movw	r20, r22
 494:	9b 01       	movw	r18, r22
 496:	22 0f       	add	r18, r18
 498:	23 2f       	mov	r18, r19
 49a:	22 1f       	adc	r18, r18
 49c:	33 0b       	sbc	r19, r19
 49e:	31 95       	neg	r19
 4a0:	ab e6       	ldi	r26, 0x6B	; 107
 4a2:	b3 e0       	ldi	r27, 0x03	; 3
 4a4:	86 d0       	rcall	.+268    	; 0x5b2 <__umulhisi3>
 4a6:	82 ab       	std	Z+50, r24	; 0x32
 4a8:	13 aa       	std	Z+51, r1	; 0x33
 4aa:	ba 01       	movw	r22, r20
 4ac:	cf 01       	movw	r24, r30
 4ae:	c1 cf       	rjmp	.-126    	; 0x432 <_ZN4Uart11setBaudRateE8BaudRate>
 4b0:	08 95       	ret

000004b2 <_ZN4Uart12checkForDataEv>:
 4b2:	88 e0       	ldi	r24, 0x08	; 8
 4b4:	97 e0       	ldi	r25, 0x07	; 7
 4b6:	e0 ec       	ldi	r30, 0xC0	; 192
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	2a e6       	ldi	r18, 0x6A	; 106
 4bc:	2a 95       	dec	r18
 4be:	f1 f7       	brne	.-4      	; 0x4bc <_ZN4Uart12checkForDataEv+0xa>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <_ZN4Uart12checkForDataEv+0x10>
 4c2:	20 81       	ld	r18, Z
 4c4:	22 23       	and	r18, r18
 4c6:	24 f0       	brlt	.+8      	; 0x4d0 <_ZN4Uart12checkForDataEv+0x1e>
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	b9 f7       	brne	.-18     	; 0x4ba <_ZN4Uart12checkForDataEv+0x8>
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	08 95       	ret
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	08 95       	ret

000004d4 <_ZN4Uart13checkForData3Ev>:
 4d4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
 4d8:	88 23       	and	r24, r24
 4da:	94 f4       	brge	.+36     	; 0x500 <_ZN4Uart13checkForData3Ev+0x2c>
 4dc:	0d c0       	rjmp	.+26     	; 0x4f8 <_ZN4Uart13checkForData3Ev+0x24>
 4de:	20 81       	ld	r18, Z
 4e0:	22 23       	and	r18, r18
 4e2:	64 f0       	brlt	.+24     	; 0x4fc <_ZN4Uart13checkForData3Ev+0x28>
 4e4:	a7 ec       	ldi	r26, 0xC7	; 199
 4e6:	b0 e0       	ldi	r27, 0x00	; 0
 4e8:	11 97       	sbiw	r26, 0x01	; 1
 4ea:	f1 f7       	brne	.-4      	; 0x4e8 <_ZN4Uart13checkForData3Ev+0x14>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <_ZN4Uart13checkForData3Ev+0x1a>
 4ee:	00 00       	nop
 4f0:	01 97       	sbiw	r24, 0x01	; 1
 4f2:	a9 f7       	brne	.-22     	; 0x4de <_ZN4Uart13checkForData3Ev+0xa>
 4f4:	80 e0       	ldi	r24, 0x00	; 0
 4f6:	08 95       	ret
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	08 95       	ret
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	08 95       	ret
 500:	87 ec       	ldi	r24, 0xC7	; 199
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	f1 f7       	brne	.-4      	; 0x504 <_ZN4Uart13checkForData3Ev+0x30>
 508:	00 c0       	rjmp	.+0      	; 0x50a <_ZN4Uart13checkForData3Ev+0x36>
 50a:	00 00       	nop
 50c:	81 e3       	ldi	r24, 0x31	; 49
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	e0 e3       	ldi	r30, 0x30	; 48
 512:	f1 e0       	ldi	r31, 0x01	; 1
 514:	e4 cf       	rjmp	.-56     	; 0x4de <_ZN4Uart13checkForData3Ev+0xa>

00000516 <_ZN4Uart11UARTreceiveEv>:
 516:	e0 ec       	ldi	r30, 0xC0	; 192
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	80 81       	ld	r24, Z
 51c:	88 23       	and	r24, r24
 51e:	ec f7       	brge	.-6      	; 0x51a <_ZN4Uart11UARTreceiveEv+0x4>
 520:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 524:	08 95       	ret

00000526 <_ZN4Uart12UARTreceive3Ev>:
 526:	e0 e3       	ldi	r30, 0x30	; 48
 528:	f1 e0       	ldi	r31, 0x01	; 1
 52a:	80 81       	ld	r24, Z
 52c:	88 23       	and	r24, r24
 52e:	ec f7       	brge	.-6      	; 0x52a <_ZN4Uart12UARTreceive3Ev+0x4>
 530:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
 534:	08 95       	ret

00000536 <_ZN4Uart8UARTsendEh>:
void Uart::UARTsend( unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
 536:	e0 ec       	ldi	r30, 0xC0	; 192
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	80 81       	ld	r24, Z
 53c:	85 ff       	sbrs	r24, 5
 53e:	fd cf       	rjmp	.-6      	; 0x53a <_ZN4Uart8UARTsendEh+0x4>
	UDR0 = data;
 540:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 544:	08 95       	ret

00000546 <_ZN4Uart10UARTstringEPKcc>:
}
void Uart::UARTstring(const char *StringPtr ,char space)
{
 546:	0f 93       	push	r16
 548:	1f 93       	push	r17
 54a:	cf 93       	push	r28
 54c:	df 93       	push	r29
 54e:	eb 01       	movw	r28, r22
	if (space)
	{
		//UARTsend((const char)*" ");
	}
	while(*StringPtr != '\0')
 550:	68 81       	ld	r22, Y
 552:	66 23       	and	r22, r22
 554:	39 f0       	breq	.+14     	; 0x564 <_ZN4Uart10UARTstringEPKcc+0x1e>
 556:	8c 01       	movw	r16, r24
 558:	21 96       	adiw	r28, 0x01	; 1
	{
		UARTsend(*StringPtr);
 55a:	c8 01       	movw	r24, r16
 55c:	ec df       	rcall	.-40     	; 0x536 <_ZN4Uart8UARTsendEh>
{
	if (space)
	{
		//UARTsend((const char)*" ");
	}
	while(*StringPtr != '\0')
 55e:	69 91       	ld	r22, Y+
 560:	61 11       	cpse	r22, r1
 562:	fb cf       	rjmp	.-10     	; 0x55a <_ZN4Uart10UARTstringEPKcc+0x14>
	}
	if (space)
	{
		//UARTsend((const char)*" ");
	}
}
 564:	df 91       	pop	r29
 566:	cf 91       	pop	r28
 568:	1f 91       	pop	r17
 56a:	0f 91       	pop	r16
 56c:	08 95       	ret

0000056e <__udivmodsi4>:
 56e:	a1 e2       	ldi	r26, 0x21	; 33
 570:	1a 2e       	mov	r1, r26
 572:	aa 1b       	sub	r26, r26
 574:	bb 1b       	sub	r27, r27
 576:	fd 01       	movw	r30, r26
 578:	0d c0       	rjmp	.+26     	; 0x594 <__udivmodsi4_ep>

0000057a <__udivmodsi4_loop>:
 57a:	aa 1f       	adc	r26, r26
 57c:	bb 1f       	adc	r27, r27
 57e:	ee 1f       	adc	r30, r30
 580:	ff 1f       	adc	r31, r31
 582:	a2 17       	cp	r26, r18
 584:	b3 07       	cpc	r27, r19
 586:	e4 07       	cpc	r30, r20
 588:	f5 07       	cpc	r31, r21
 58a:	20 f0       	brcs	.+8      	; 0x594 <__udivmodsi4_ep>
 58c:	a2 1b       	sub	r26, r18
 58e:	b3 0b       	sbc	r27, r19
 590:	e4 0b       	sbc	r30, r20
 592:	f5 0b       	sbc	r31, r21

00000594 <__udivmodsi4_ep>:
 594:	66 1f       	adc	r22, r22
 596:	77 1f       	adc	r23, r23
 598:	88 1f       	adc	r24, r24
 59a:	99 1f       	adc	r25, r25
 59c:	1a 94       	dec	r1
 59e:	69 f7       	brne	.-38     	; 0x57a <__udivmodsi4_loop>
 5a0:	60 95       	com	r22
 5a2:	70 95       	com	r23
 5a4:	80 95       	com	r24
 5a6:	90 95       	com	r25
 5a8:	9b 01       	movw	r18, r22
 5aa:	ac 01       	movw	r20, r24
 5ac:	bd 01       	movw	r22, r26
 5ae:	cf 01       	movw	r24, r30
 5b0:	08 95       	ret

000005b2 <__umulhisi3>:
 5b2:	a2 9f       	mul	r26, r18
 5b4:	b0 01       	movw	r22, r0
 5b6:	b3 9f       	mul	r27, r19
 5b8:	c0 01       	movw	r24, r0
 5ba:	a3 9f       	mul	r26, r19
 5bc:	70 0d       	add	r23, r0
 5be:	81 1d       	adc	r24, r1
 5c0:	11 24       	eor	r1, r1
 5c2:	91 1d       	adc	r25, r1
 5c4:	b2 9f       	mul	r27, r18
 5c6:	70 0d       	add	r23, r0
 5c8:	81 1d       	adc	r24, r1
 5ca:	11 24       	eor	r1, r1
 5cc:	91 1d       	adc	r25, r1
 5ce:	08 95       	ret

000005d0 <strcpy>:
 5d0:	fb 01       	movw	r30, r22
 5d2:	dc 01       	movw	r26, r24
 5d4:	01 90       	ld	r0, Z+
 5d6:	0d 92       	st	X+, r0
 5d8:	00 20       	and	r0, r0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <strcpy+0x4>
 5dc:	08 95       	ret

000005de <_exit>:
 5de:	f8 94       	cli

000005e0 <__stop_program>:
 5e0:	ff cf       	rjmp	.-2      	; 0x5e0 <__stop_program>
