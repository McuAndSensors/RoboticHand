
HandControlSide.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ac  00800100  00000648  000006bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000648  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000798  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000168  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002935  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d92  00000000  00000000  00003275  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c09  00000000  00000000  00004007  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000444  00000000  00000000  00004c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000acd  00000000  00000000  00005054  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001a4a  00000000  00000000  00005b21  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000150  00000000  00000000  0000756b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e4       	ldi	r30, 0x48	; 72
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 3a       	cpi	r26, 0xAC	; 172
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac ea       	ldi	r26, 0xAC	; 172
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 3a       	cpi	r26, 0xAC	; 172
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 65 01 	call	0x2ca	; 0x2ca <main>
  9e:	0c 94 22 03 	jmp	0x644	; 0x644 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_ZN9bluetooth5setupEv>:
		if (counter > 0)
		{
			return true;
		}
		return false;
	}
  a6:	60 e8       	ldi	r22, 0x80	; 128
  a8:	75 e2       	ldi	r23, 0x25	; 37
  aa:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_ZN4Uart11setBaudRateE8BaudRate>
  ae:	08 95       	ret

000000b0 <_ZN9bluetooth11sendCommandEPKc>:
  b0:	ef 92       	push	r14
  b2:	ff 92       	push	r15
  b4:	0f 93       	push	r16
  b6:	1f 93       	push	r17
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	7c 01       	movw	r14, r24
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	81 ee       	ldi	r24, 0xE1	; 225
  c2:	94 e0       	ldi	r25, 0x04	; 4
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <_ZN9bluetooth11sendCommandEPKc+0x14>
  cc:	00 c0       	rjmp	.+0      	; 0xce <_ZN9bluetooth11sendCommandEPKc+0x1e>
  ce:	00 00       	nop
  d0:	0e 2d       	mov	r16, r14
  d2:	1f 2d       	mov	r17, r15
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	c7 01       	movw	r24, r14
  d8:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN4Uart10UARTstringEPKcc>
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	65 e6       	ldi	r22, 0x65	; 101
  e0:	71 e0       	ldi	r23, 0x01	; 1
  e2:	c7 01       	movw	r24, r14
  e4:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN4Uart10UARTstringEPKcc>
  e8:	f7 01       	movw	r30, r14
  ea:	14 aa       	std	Z+52, r1	; 0x34
  ec:	e7 01       	movw	r28, r14
  ee:	e4 96       	adiw	r28, 0x34	; 52
  f0:	fa ec       	ldi	r31, 0xCA	; 202
  f2:	ef 0e       	add	r14, r31
  f4:	f1 1c       	adc	r15, r1
  f6:	80 2f       	mov	r24, r16
  f8:	91 2f       	mov	r25, r17
  fa:	0e 94 8c 02 	call	0x518	; 0x518 <_ZN4Uart12checkForDataEv>
  fe:	88 23       	and	r24, r24
 100:	51 f0       	breq	.+20     	; 0x116 <_ZN9bluetooth11sendCommandEPKc+0x66>
 102:	ce 15       	cp	r28, r14
 104:	df 05       	cpc	r29, r15
 106:	39 f0       	breq	.+14     	; 0x116 <_ZN9bluetooth11sendCommandEPKc+0x66>
 108:	80 2f       	mov	r24, r16
 10a:	91 2f       	mov	r25, r17
 10c:	0e 94 9d 02 	call	0x53a	; 0x53a <_ZN4Uart11UARTreceiveEv>
 110:	89 93       	st	Y+, r24
 112:	19 82       	std	Y+1, r1	; 0x01
 114:	f0 cf       	rjmp	.-32     	; 0xf6 <_ZN9bluetooth11sendCommandEPKc+0x46>
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	1f 91       	pop	r17
 11e:	0f 91       	pop	r16
 120:	ff 90       	pop	r15
 122:	ef 90       	pop	r14
 124:	08 95       	ret

00000126 <_ZN9bluetooth10checkForOKEv>:
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	ec 01       	movw	r28, r24
 12c:	bc 01       	movw	r22, r24
 12e:	6c 5c       	subi	r22, 0xCC	; 204
 130:	7f 4f       	sbci	r23, 0xFF	; 255
 132:	41 e0       	ldi	r20, 0x01	; 1
 134:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN4Uart10UARTstringEPKcc>
 138:	9c a9       	ldd	r25, Y+52	; 0x34
 13a:	99 23       	and	r25, r25
 13c:	b1 f0       	breq	.+44     	; 0x16a <_ZN9bluetooth10checkForOKEv+0x44>
 13e:	fe 01       	movw	r30, r28
 140:	f5 96       	adiw	r30, 0x35	; 53
 142:	9e 01       	movw	r18, r28
 144:	26 58       	subi	r18, 0x86	; 134
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	03 c0       	rjmp	.+6      	; 0x150 <_ZN9bluetooth10checkForOKEv+0x2a>
 14a:	91 91       	ld	r25, Z+
 14c:	99 23       	and	r25, r25
 14e:	79 f0       	breq	.+30     	; 0x16e <_ZN9bluetooth10checkForOKEv+0x48>
 150:	9f 34       	cpi	r25, 0x4F	; 79
 152:	21 f4       	brne	.+8      	; 0x15c <_ZN9bluetooth10checkForOKEv+0x36>
 154:	80 81       	ld	r24, Z
 156:	8b 34       	cpi	r24, 0x4B	; 75
 158:	19 f4       	brne	.+6      	; 0x160 <_ZN9bluetooth10checkForOKEv+0x3a>
 15a:	0b c0       	rjmp	.+22     	; 0x172 <_ZN9bluetooth10checkForOKEv+0x4c>
 15c:	9b 34       	cpi	r25, 0x4B	; 75
 15e:	59 f0       	breq	.+22     	; 0x176 <_ZN9bluetooth10checkForOKEv+0x50>
 160:	e2 17       	cp	r30, r18
 162:	f3 07       	cpc	r31, r19
 164:	91 f7       	brne	.-28     	; 0x14a <_ZN9bluetooth10checkForOKEv+0x24>
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	07 c0       	rjmp	.+14     	; 0x178 <_ZN9bluetooth10checkForOKEv+0x52>
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	05 c0       	rjmp	.+10     	; 0x178 <_ZN9bluetooth10checkForOKEv+0x52>
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	03 c0       	rjmp	.+6      	; 0x178 <_ZN9bluetooth10checkForOKEv+0x52>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	01 c0       	rjmp	.+2      	; 0x178 <_ZN9bluetooth10checkForOKEv+0x52>
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <_ZN9bluetooth13setDeviceNameEPKc>:
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
 18a:	e2 97       	sbiw	r28, 0x32	; 50
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	f8 94       	cli
 190:	de bf       	out	0x3e, r29	; 62
 192:	0f be       	out	0x3f, r0	; 63
 194:	cd bf       	out	0x3d, r28	; 61
 196:	8c 01       	movw	r16, r24
 198:	88 e0       	ldi	r24, 0x08	; 8
 19a:	e0 e0       	ldi	r30, 0x00	; 0
 19c:	f1 e0       	ldi	r31, 0x01	; 1
 19e:	de 01       	movw	r26, r28
 1a0:	11 96       	adiw	r26, 0x01	; 1
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <_ZN9bluetooth13setDeviceNameEPKc+0x24>
 1aa:	fe 01       	movw	r30, r28
 1ac:	39 96       	adiw	r30, 0x09	; 9
 1ae:	8a e2       	ldi	r24, 0x2A	; 42
 1b0:	df 01       	movw	r26, r30
 1b2:	1d 92       	st	X+, r1
 1b4:	8a 95       	dec	r24
 1b6:	e9 f7       	brne	.-6      	; 0x1b2 <_ZN9bluetooth13setDeviceNameEPKc+0x34>
 1b8:	ce 01       	movw	r24, r28
 1ba:	08 96       	adiw	r24, 0x08	; 8
 1bc:	0e 94 1b 03 	call	0x636	; 0x636 <strcpy>
 1c0:	be 01       	movw	r22, r28
 1c2:	6f 5f       	subi	r22, 0xFF	; 255
 1c4:	7f 4f       	sbci	r23, 0xFF	; 255
 1c6:	c8 01       	movw	r24, r16
 1c8:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN9bluetooth11sendCommandEPKc>
 1cc:	c8 01       	movw	r24, r16
 1ce:	0e 94 93 00 	call	0x126	; 0x126 <_ZN9bluetooth10checkForOKEv>
 1d2:	e2 96       	adiw	r28, 0x32	; 50
 1d4:	0f b6       	in	r0, 0x3f	; 63
 1d6:	f8 94       	cli
 1d8:	de bf       	out	0x3e, r29	; 62
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	cd bf       	out	0x3d, r28	; 61
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	08 95       	ret

000001e8 <_ZN9bluetooth17setDeviceAsMasterEv>:
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	ec 01       	movw	r28, r24
 1ee:	61 e7       	ldi	r22, 0x71	; 113
 1f0:	71 e0       	ldi	r23, 0x01	; 1
 1f2:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN9bluetooth11sendCommandEPKc>
 1f6:	ce 01       	movw	r24, r28
 1f8:	0e 94 93 00 	call	0x126	; 0x126 <_ZN9bluetooth10checkForOKEv>
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	08 95       	ret

00000202 <_ZN9bluetooth15connectToDeviceEPKc>:
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	69 97       	sbiw	r28, 0x19	; 25
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	f8 94       	cli
 214:	de bf       	out	0x3e, r29	; 62
 216:	0f be       	out	0x3f, r0	; 63
 218:	cd bf       	out	0x3d, r28	; 61
 21a:	8c 01       	movw	r16, r24
 21c:	88 e0       	ldi	r24, 0x08	; 8
 21e:	eb e3       	ldi	r30, 0x3B	; 59
 220:	f1 e0       	ldi	r31, 0x01	; 1
 222:	de 01       	movw	r26, r28
 224:	11 96       	adiw	r26, 0x01	; 1
 226:	01 90       	ld	r0, Z+
 228:	0d 92       	st	X+, r0
 22a:	8a 95       	dec	r24
 22c:	e1 f7       	brne	.-8      	; 0x226 <_ZN9bluetooth15connectToDeviceEPKc+0x24>
 22e:	fe 01       	movw	r30, r28
 230:	39 96       	adiw	r30, 0x09	; 9
 232:	81 e1       	ldi	r24, 0x11	; 17
 234:	df 01       	movw	r26, r30
 236:	1d 92       	st	X+, r1
 238:	8a 95       	dec	r24
 23a:	e9 f7       	brne	.-6      	; 0x236 <_ZN9bluetooth15connectToDeviceEPKc+0x34>
 23c:	ce 01       	movw	r24, r28
 23e:	08 96       	adiw	r24, 0x08	; 8
 240:	0e 94 1b 03 	call	0x636	; 0x636 <strcpy>
 244:	be 01       	movw	r22, r28
 246:	6f 5f       	subi	r22, 0xFF	; 255
 248:	7f 4f       	sbci	r23, 0xFF	; 255
 24a:	c8 01       	movw	r24, r16
 24c:	0e 94 58 00 	call	0xb0	; 0xb0 <_ZN9bluetooth11sendCommandEPKc>
 250:	c8 01       	movw	r24, r16
 252:	0e 94 93 00 	call	0x126	; 0x126 <_ZN9bluetooth10checkForOKEv>
 256:	69 96       	adiw	r28, 0x19	; 25
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	f8 94       	cli
 25c:	de bf       	out	0x3e, r29	; 62
 25e:	0f be       	out	0x3f, r0	; 63
 260:	cd bf       	out	0x3d, r28	; 61
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	08 95       	ret

0000026c <_ZN9bluetooth8sendDataEPc>:
	void bluetooth::sendData(char *dataOut){
		UARTstring(dataOut);
 26c:	41 e0       	ldi	r20, 0x01	; 1
 26e:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN4Uart10UARTstringEPKcc>
 272:	08 95       	ret

00000274 <_ZN9bluetoothC1Ev>:
	}
	bluetooth::bluetooth(){
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	ec 01       	movw	r28, r24
 27a:	60 e8       	ldi	r22, 0x80	; 128
 27c:	75 e2       	ldi	r23, 0x25	; 37
 27e:	0e 94 79 02 	call	0x4f2	; 0x4f2 <_ZN4UartC1E8BaudRate>
		setup();
 282:	ce 01       	movw	r24, r28
 284:	0e 94 53 00 	call	0xa6	; 0xa6 <_ZN9bluetooth5setupEv>
	}
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <_Z7adcInitv>:
#include "megaregisters1.h"
#include "UART.h"
#include "bluetooth_AT_09.h"

void adcInit(){
	ADMUX = (1<<REFS0);
 28e:	80 e4       	ldi	r24, 0x40	; 64
 290:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 294:	87 e8       	ldi	r24, 0x87	; 135
 296:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 29a:	08 95       	ret

0000029c <_Z9adcRead10h>:
}

uint16_t adcRead10 (uint8_t channel){
	channel &= 7;
	ADMUX &= ~(1<<ADLAR);
 29c:	ec e7       	ldi	r30, 0x7C	; 124
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	90 81       	ld	r25, Z
 2a2:	9f 7d       	andi	r25, 0xDF	; 223
 2a4:	90 83       	st	Z, r25
	ADMUX = (ADMUX & 0xF8) | channel;
 2a6:	90 81       	ld	r25, Z
 2a8:	98 7f       	andi	r25, 0xF8	; 248
 2aa:	87 70       	andi	r24, 0x07	; 7
 2ac:	89 2b       	or	r24, r25
 2ae:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
 2b0:	ea e7       	ldi	r30, 0x7A	; 122
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	80 64       	ori	r24, 0x40	; 64
 2b8:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC)) ;
 2ba:	80 81       	ld	r24, Z
 2bc:	86 fd       	sbrc	r24, 6
 2be:	fd cf       	rjmp	.-6      	; 0x2ba <_Z9adcRead10h+0x1e>
	return (ADC);
 2c0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2c4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 2c8:	08 95       	ret

000002ca <main>:
	

int main(void)
{
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	cd b7       	in	r28, 0x3d	; 61
 2d0:	de b7       	in	r29, 0x3e	; 62
 2d2:	c5 5d       	subi	r28, 0xD5	; 213
 2d4:	d1 09       	sbc	r29, r1
 2d6:	0f b6       	in	r0, 0x3f	; 63
 2d8:	f8 94       	cli
 2da:	de bf       	out	0x3e, r29	; 62
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	cd bf       	out	0x3d, r28	; 61
	uint16_t adcvalue1 = 0, adcvalue2 = 0, adcvalue3 = 0, adcvalue4 = 0, adcvalue5 = 0;
	// finger1 = thumb,  finger2 = forefinger,  finger3 = middle finger,  finger4 = ring finger,  finger5 = little finger
	int finger1, finger2, finger3, finger4, finger5;
	// initialize timer in PWM mode
	adcInit();
 2e0:	0e 94 47 01 	call	0x28e	; 0x28e <_Z7adcInitv>
	
	bluetooth Master;
 2e4:	ce 01       	movw	r24, r28
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	0e 94 3a 01 	call	0x274	; 0x274 <_ZN9bluetoothC1Ev>
	Master.setDeviceAsMaster();
 2ec:	ce 01       	movw	r24, r28
 2ee:	01 96       	adiw	r24, 0x01	; 1
 2f0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_ZN9bluetooth17setDeviceAsMasterEv>
	Master.setDeviceName("Amir_Master_Device");
 2f4:	6c e8       	ldi	r22, 0x8C	; 140
 2f6:	71 e0       	ldi	r23, 0x01	; 1
 2f8:	ce 01       	movw	r24, r28
 2fa:	01 96       	adiw	r24, 0x01	; 1
 2fc:	0e 94 bf 00 	call	0x17e	; 0x17e <_ZN9bluetooth13setDeviceNameEPKc>
	Master.connectToDevice("010203041ADE"); //Slave MAC address is: 01:02:03:04:1A:DE
 300:	6f e9       	ldi	r22, 0x9F	; 159
 302:	71 e0       	ldi	r23, 0x01	; 1
 304:	ce 01       	movw	r24, r28
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	0e 94 01 01 	call	0x202	; 0x202 <_ZN9bluetooth15connectToDeviceEPKc>
	char inData[10];
	inData[0] = inData[6] = '*';
 30c:	8a e2       	ldi	r24, 0x2A	; 42
 30e:	ce 52       	subi	r28, 0x2E	; 46
 310:	df 4f       	sbci	r29, 0xFF	; 255
 312:	88 83       	st	Y, r24
 314:	c2 5d       	subi	r28, 0xD2	; 210
 316:	d0 40       	sbci	r29, 0x00	; 0
 318:	c4 53       	subi	r28, 0x34	; 52
 31a:	df 4f       	sbci	r29, 0xFF	; 255
 31c:	88 83       	st	Y, r24
 31e:	cc 5c       	subi	r28, 0xCC	; 204
 320:	d0 40       	sbci	r29, 0x00	; 0
	inData[7] = '\0';
 322:	cd 52       	subi	r28, 0x2D	; 45
 324:	df 4f       	sbci	r29, 0xFF	; 255
 326:	18 82       	st	Y, r1
 328:	c3 5d       	subi	r28, 0xD3	; 211
 32a:	d0 40       	sbci	r29, 0x00	; 0
		{
			inData[1] = (finger1-510)/14*4+8;
		}
		else
		{
			inData[1] = 8;
 32c:	68 94       	set
 32e:	77 24       	eor	r7, r7
 330:	73 f8       	bld	r7, 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 332:	2f ef       	ldi	r18, 0xFF	; 255
 334:	81 ee       	ldi	r24, 0xE1	; 225
 336:	94 e0       	ldi	r25, 0x04	; 4
 338:	21 50       	subi	r18, 0x01	; 1
 33a:	80 40       	sbci	r24, 0x00	; 0
 33c:	90 40       	sbci	r25, 0x00	; 0
 33e:	e1 f7       	brne	.-8      	; 0x338 <main+0x6e>
 340:	00 c0       	rjmp	.+0      	; 0x342 <main+0x78>
 342:	00 00       	nop
	inData[7] = '\0';
	// run forever
    while (1) 
    {
		_delay_ms(100);
		Master.sendData(inData);
 344:	be 01       	movw	r22, r28
 346:	64 53       	subi	r22, 0x34	; 52
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	ce 01       	movw	r24, r28
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN9bluetooth8sendDataEPc>
		adcvalue1 = adcRead10(1);
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z9adcRead10h>
 358:	5c 01       	movw	r10, r24
		adcvalue2 = adcRead10(2);
 35a:	82 e0       	ldi	r24, 0x02	; 2
 35c:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z9adcRead10h>
 360:	6c 01       	movw	r12, r24
		adcvalue3 = adcRead10(3);
 362:	83 e0       	ldi	r24, 0x03	; 3
 364:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z9adcRead10h>
 368:	7c 01       	movw	r14, r24
		adcvalue4 = adcRead10(4);
 36a:	84 e0       	ldi	r24, 0x04	; 4
 36c:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z9adcRead10h>
 370:	8c 01       	movw	r16, r24
		adcvalue5 = adcRead10(5);
 372:	85 e0       	ldi	r24, 0x05	; 5
 374:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z9adcRead10h>
 378:	9c 01       	movw	r18, r24
		
		finger1 = adcvalue1;
		finger2 = adcvalue2;
 37a:	46 01       	movw	r8, r12
		finger3 = adcvalue3;
 37c:	f7 01       	movw	r30, r14
		finger4 = adcvalue4;
 37e:	28 01       	movw	r4, r16
		finger5 = adcvalue5;
 380:	1c 01       	movw	r2, r24
		
		////// finger1  ///////
		if (finger1 > 510)
 382:	8f ef       	ldi	r24, 0xFF	; 255
 384:	a8 16       	cp	r10, r24
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	b8 06       	cpc	r11, r24
 38a:	8c f0       	brlt	.+34     	; 0x3ae <main+0xe4>
		{
			inData[1] = (finger1-510)/14*4+8;
 38c:	c5 01       	movw	r24, r10
 38e:	8e 5f       	subi	r24, 0xFE	; 254
 390:	91 40       	sbci	r25, 0x01	; 1
 392:	6e e0       	ldi	r22, 0x0E	; 14
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	0e 94 c2 02 	call	0x584	; 0x584 <__divmodhi4>
 39a:	6e 5f       	subi	r22, 0xFE	; 254
 39c:	7f 4f       	sbci	r23, 0xFF	; 255
 39e:	66 0f       	add	r22, r22
 3a0:	66 0f       	add	r22, r22
 3a2:	c3 53       	subi	r28, 0x33	; 51
 3a4:	df 4f       	sbci	r29, 0xFF	; 255
 3a6:	68 83       	st	Y, r22
 3a8:	cd 5c       	subi	r28, 0xCD	; 205
 3aa:	d0 40       	sbci	r29, 0x00	; 0
 3ac:	05 c0       	rjmp	.+10     	; 0x3b8 <main+0xee>
		}
		else
		{
			inData[1] = 8;
 3ae:	c3 53       	subi	r28, 0x33	; 51
 3b0:	df 4f       	sbci	r29, 0xFF	; 255
 3b2:	78 82       	st	Y, r7
 3b4:	cd 5c       	subi	r28, 0xCD	; 205
 3b6:	d0 40       	sbci	r29, 0x00	; 0
		}
		
		////// finger2  ///////
		if (finger2 > 300)
 3b8:	9d e2       	ldi	r25, 0x2D	; 45
 3ba:	89 16       	cp	r8, r25
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	99 06       	cpc	r9, r25
 3c0:	8c f0       	brlt	.+34     	; 0x3e4 <main+0x11a>
		{
			inData[2] = (finger2-300)/24*4+8;
 3c2:	c6 01       	movw	r24, r12
 3c4:	8c 52       	subi	r24, 0x2C	; 44
 3c6:	91 40       	sbci	r25, 0x01	; 1
 3c8:	68 e1       	ldi	r22, 0x18	; 24
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	0e 94 c2 02 	call	0x584	; 0x584 <__divmodhi4>
 3d0:	6e 5f       	subi	r22, 0xFE	; 254
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	66 0f       	add	r22, r22
 3d6:	66 0f       	add	r22, r22
 3d8:	c2 53       	subi	r28, 0x32	; 50
 3da:	df 4f       	sbci	r29, 0xFF	; 255
 3dc:	68 83       	st	Y, r22
 3de:	ce 5c       	subi	r28, 0xCE	; 206
 3e0:	d0 40       	sbci	r29, 0x00	; 0
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <main+0x124>
		}
		else
		{
			inData[2] = 8;
 3e4:	c2 53       	subi	r28, 0x32	; 50
 3e6:	df 4f       	sbci	r29, 0xFF	; 255
 3e8:	78 82       	st	Y, r7
 3ea:	ce 5c       	subi	r28, 0xCE	; 206
 3ec:	d0 40       	sbci	r29, 0x00	; 0
		}
		
		////// finger3  ///////
		if (finger3 > 180)
 3ee:	e5 3b       	cpi	r30, 0xB5	; 181
 3f0:	f1 05       	cpc	r31, r1
 3f2:	8c f0       	brlt	.+34     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
		{
			inData[5] = (finger3-180)/22*4+8;
 3f4:	c7 01       	movw	r24, r14
 3f6:	84 5b       	subi	r24, 0xB4	; 180
 3f8:	91 09       	sbc	r25, r1
 3fa:	66 e1       	ldi	r22, 0x16	; 22
 3fc:	70 e0       	ldi	r23, 0x00	; 0
 3fe:	0e 94 c2 02 	call	0x584	; 0x584 <__divmodhi4>
 402:	6e 5f       	subi	r22, 0xFE	; 254
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	66 0f       	add	r22, r22
 408:	66 0f       	add	r22, r22
 40a:	cf 52       	subi	r28, 0x2F	; 47
 40c:	df 4f       	sbci	r29, 0xFF	; 255
 40e:	68 83       	st	Y, r22
 410:	c1 5d       	subi	r28, 0xD1	; 209
 412:	d0 40       	sbci	r29, 0x00	; 0
 414:	05 c0       	rjmp	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
		}
		else
		{
			inData[5] = 8;
 416:	cf 52       	subi	r28, 0x2F	; 47
 418:	df 4f       	sbci	r29, 0xFF	; 255
 41a:	78 82       	st	Y, r7
 41c:	c1 5d       	subi	r28, 0xD1	; 209
 41e:	d0 40       	sbci	r29, 0x00	; 0
		}
		
		////// finger4  ///////
		if (finger4 > 505)
 420:	8a ef       	ldi	r24, 0xFA	; 250
 422:	48 16       	cp	r4, r24
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	58 06       	cpc	r5, r24
 428:	bc f0       	brlt	.+46     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
		{
			inData[4] = (finger4-505)/16*4+8;
 42a:	09 5f       	subi	r16, 0xF9	; 249
 42c:	11 40       	sbci	r17, 0x01	; 1
 42e:	c8 01       	movw	r24, r16
 430:	99 23       	and	r25, r25
 432:	0c f4       	brge	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	0f 96       	adiw	r24, 0x0f	; 15
 436:	95 95       	asr	r25
 438:	87 95       	ror	r24
 43a:	95 95       	asr	r25
 43c:	87 95       	ror	r24
 43e:	95 95       	asr	r25
 440:	87 95       	ror	r24
 442:	95 95       	asr	r25
 444:	87 95       	ror	r24
 446:	02 96       	adiw	r24, 0x02	; 2
 448:	88 0f       	add	r24, r24
 44a:	88 0f       	add	r24, r24
 44c:	c0 53       	subi	r28, 0x30	; 48
 44e:	df 4f       	sbci	r29, 0xFF	; 255
 450:	88 83       	st	Y, r24
 452:	c0 5d       	subi	r28, 0xD0	; 208
 454:	d0 40       	sbci	r29, 0x00	; 0
 456:	05 c0       	rjmp	.+10     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
		}
		else
		{
			inData[4] = 8;
 458:	c0 53       	subi	r28, 0x30	; 48
 45a:	df 4f       	sbci	r29, 0xFF	; 255
 45c:	78 82       	st	Y, r7
 45e:	c0 5d       	subi	r28, 0xD0	; 208
 460:	d0 40       	sbci	r29, 0x00	; 0
		}
		
		////// finger5  ///////
		if (finger5 > 255)
 462:	9f ef       	ldi	r25, 0xFF	; 255
 464:	29 16       	cp	r2, r25
 466:	31 04       	cpc	r3, r1
 468:	b1 f0       	breq	.+44     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 46a:	ac f0       	brlt	.+42     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
		{
			inData[3] = (finger5-255)/8*4+8;
 46c:	2f 5f       	subi	r18, 0xFF	; 255
 46e:	31 09       	sbc	r19, r1
 470:	c9 01       	movw	r24, r18
 472:	99 23       	and	r25, r25
 474:	0c f4       	brge	.+2      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 476:	07 96       	adiw	r24, 0x07	; 7
 478:	95 95       	asr	r25
 47a:	87 95       	ror	r24
 47c:	95 95       	asr	r25
 47e:	87 95       	ror	r24
 480:	95 95       	asr	r25
 482:	87 95       	ror	r24
 484:	02 96       	adiw	r24, 0x02	; 2
 486:	88 0f       	add	r24, r24
 488:	88 0f       	add	r24, r24
 48a:	c1 53       	subi	r28, 0x31	; 49
 48c:	df 4f       	sbci	r29, 0xFF	; 255
 48e:	88 83       	st	Y, r24
 490:	cf 5c       	subi	r28, 0xCF	; 207
 492:	d0 40       	sbci	r29, 0x00	; 0
 494:	4e cf       	rjmp	.-356    	; 0x332 <main+0x68>
		}
		else
		{
			inData[3] = 8;
 496:	c1 53       	subi	r28, 0x31	; 49
 498:	df 4f       	sbci	r29, 0xFF	; 255
 49a:	78 82       	st	Y, r7
 49c:	cf 5c       	subi	r28, 0xCF	; 207
 49e:	d0 40       	sbci	r29, 0x00	; 0
 4a0:	48 cf       	rjmp	.-368    	; 0x332 <main+0x68>

000004a2 <_ZN4Uart11setBaudRateE8BaudRate>:
		_str[i] = UARTreceive();
		i++;
	}
	_str[i] = 0;
	return *_str;
}
 4a2:	cb 01       	movw	r24, r22
 4a4:	a0 e0       	ldi	r26, 0x00	; 0
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	88 0f       	add	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	aa 1f       	adc	r26, r26
 4ae:	bb 1f       	adc	r27, r27
 4b0:	88 0f       	add	r24, r24
 4b2:	99 1f       	adc	r25, r25
 4b4:	aa 1f       	adc	r26, r26
 4b6:	bb 1f       	adc	r27, r27
 4b8:	9c 01       	movw	r18, r24
 4ba:	ad 01       	movw	r20, r26
 4bc:	22 0f       	add	r18, r18
 4be:	33 1f       	adc	r19, r19
 4c0:	44 1f       	adc	r20, r20
 4c2:	55 1f       	adc	r21, r21
 4c4:	22 0f       	add	r18, r18
 4c6:	33 1f       	adc	r19, r19
 4c8:	44 1f       	adc	r20, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	60 e0       	ldi	r22, 0x00	; 0
 4ce:	74 e2       	ldi	r23, 0x24	; 36
 4d0:	84 ef       	ldi	r24, 0xF4	; 244
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__udivmodsi4>
 4d8:	21 50       	subi	r18, 0x01	; 1
 4da:	31 09       	sbc	r19, r1
 4dc:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 4e0:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 4e4:	88 e1       	ldi	r24, 0x18	; 24
 4e6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 4ea:	86 e0       	ldi	r24, 0x06	; 6
 4ec:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 4f0:	08 95       	ret

000004f2 <_ZN4UartC1E8BaudRate>:
 4f2:	fc 01       	movw	r30, r24
 4f4:	ab 01       	movw	r20, r22
 4f6:	9b 01       	movw	r18, r22
 4f8:	22 0f       	add	r18, r18
 4fa:	23 2f       	mov	r18, r19
 4fc:	22 1f       	adc	r18, r18
 4fe:	33 0b       	sbc	r19, r19
 500:	31 95       	neg	r19
 502:	ab e6       	ldi	r26, 0x6B	; 107
 504:	b3 e0       	ldi	r27, 0x03	; 3
 506:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__umulhisi3>
 50a:	82 ab       	std	Z+50, r24	; 0x32
 50c:	13 aa       	std	Z+51, r1	; 0x33
 50e:	ba 01       	movw	r22, r20
 510:	cf 01       	movw	r24, r30
 512:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_ZN4Uart11setBaudRateE8BaudRate>
 516:	08 95       	ret

00000518 <_ZN4Uart12checkForDataEv>:
 518:	88 e0       	ldi	r24, 0x08	; 8
 51a:	97 e0       	ldi	r25, 0x07	; 7
 51c:	e0 ec       	ldi	r30, 0xC0	; 192
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	2a e6       	ldi	r18, 0x6A	; 106
 522:	2a 95       	dec	r18
 524:	f1 f7       	brne	.-4      	; 0x522 <_ZN4Uart12checkForDataEv+0xa>
 526:	00 c0       	rjmp	.+0      	; 0x528 <_ZN4Uart12checkForDataEv+0x10>
 528:	20 81       	ld	r18, Z
 52a:	22 23       	and	r18, r18
 52c:	24 f0       	brlt	.+8      	; 0x536 <_ZN4Uart12checkForDataEv+0x1e>
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	b9 f7       	brne	.-18     	; 0x520 <_ZN4Uart12checkForDataEv+0x8>
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	08 95       	ret
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	08 95       	ret

0000053a <_ZN4Uart11UARTreceiveEv>:
 53a:	e0 ec       	ldi	r30, 0xC0	; 192
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	80 81       	ld	r24, Z
 540:	88 23       	and	r24, r24
 542:	ec f7       	brge	.-6      	; 0x53e <_ZN4Uart11UARTreceiveEv+0x4>
 544:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 548:	08 95       	ret

0000054a <_ZN4Uart8UARTsendEh>:
void Uart::UARTsend( unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
 54a:	e0 ec       	ldi	r30, 0xC0	; 192
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	85 ff       	sbrs	r24, 5
 552:	fd cf       	rjmp	.-6      	; 0x54e <_ZN4Uart8UARTsendEh+0x4>
	UDR0 = data;
 554:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 558:	08 95       	ret

0000055a <_ZN4Uart10UARTstringEPKcc>:
}
void Uart::UARTstring(const char *StringPtr ,char space)
{
 55a:	0f 93       	push	r16
 55c:	1f 93       	push	r17
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	eb 01       	movw	r28, r22
	if (space)
	{
		//UARTsend((const char)*" ");
	}
	while(*StringPtr != '\0')
 564:	68 81       	ld	r22, Y
 566:	66 23       	and	r22, r22
 568:	41 f0       	breq	.+16     	; 0x57a <_ZN4Uart10UARTstringEPKcc+0x20>
 56a:	8c 01       	movw	r16, r24
 56c:	21 96       	adiw	r28, 0x01	; 1
	{
		UARTsend(*StringPtr);
 56e:	c8 01       	movw	r24, r16
 570:	0e 94 a5 02 	call	0x54a	; 0x54a <_ZN4Uart8UARTsendEh>
{
	if (space)
	{
		//UARTsend((const char)*" ");
	}
	while(*StringPtr != '\0')
 574:	69 91       	ld	r22, Y+
 576:	61 11       	cpse	r22, r1
 578:	fa cf       	rjmp	.-12     	; 0x56e <_ZN4Uart10UARTstringEPKcc+0x14>
	}
	if (space)
	{
		//UARTsend((const char)*" ");
	}
}
 57a:	df 91       	pop	r29
 57c:	cf 91       	pop	r28
 57e:	1f 91       	pop	r17
 580:	0f 91       	pop	r16
 582:	08 95       	ret

00000584 <__divmodhi4>:
 584:	97 fb       	bst	r25, 7
 586:	07 2e       	mov	r0, r23
 588:	16 f4       	brtc	.+4      	; 0x58e <__divmodhi4+0xa>
 58a:	00 94       	com	r0
 58c:	07 d0       	rcall	.+14     	; 0x59c <__divmodhi4_neg1>
 58e:	77 fd       	sbrc	r23, 7
 590:	09 d0       	rcall	.+18     	; 0x5a4 <__divmodhi4_neg2>
 592:	0e 94 07 03 	call	0x60e	; 0x60e <__udivmodhi4>
 596:	07 fc       	sbrc	r0, 7
 598:	05 d0       	rcall	.+10     	; 0x5a4 <__divmodhi4_neg2>
 59a:	3e f4       	brtc	.+14     	; 0x5aa <__divmodhi4_exit>

0000059c <__divmodhi4_neg1>:
 59c:	90 95       	com	r25
 59e:	81 95       	neg	r24
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	08 95       	ret

000005a4 <__divmodhi4_neg2>:
 5a4:	70 95       	com	r23
 5a6:	61 95       	neg	r22
 5a8:	7f 4f       	sbci	r23, 0xFF	; 255

000005aa <__divmodhi4_exit>:
 5aa:	08 95       	ret

000005ac <__udivmodsi4>:
 5ac:	a1 e2       	ldi	r26, 0x21	; 33
 5ae:	1a 2e       	mov	r1, r26
 5b0:	aa 1b       	sub	r26, r26
 5b2:	bb 1b       	sub	r27, r27
 5b4:	fd 01       	movw	r30, r26
 5b6:	0d c0       	rjmp	.+26     	; 0x5d2 <__udivmodsi4_ep>

000005b8 <__udivmodsi4_loop>:
 5b8:	aa 1f       	adc	r26, r26
 5ba:	bb 1f       	adc	r27, r27
 5bc:	ee 1f       	adc	r30, r30
 5be:	ff 1f       	adc	r31, r31
 5c0:	a2 17       	cp	r26, r18
 5c2:	b3 07       	cpc	r27, r19
 5c4:	e4 07       	cpc	r30, r20
 5c6:	f5 07       	cpc	r31, r21
 5c8:	20 f0       	brcs	.+8      	; 0x5d2 <__udivmodsi4_ep>
 5ca:	a2 1b       	sub	r26, r18
 5cc:	b3 0b       	sbc	r27, r19
 5ce:	e4 0b       	sbc	r30, r20
 5d0:	f5 0b       	sbc	r31, r21

000005d2 <__udivmodsi4_ep>:
 5d2:	66 1f       	adc	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	88 1f       	adc	r24, r24
 5d8:	99 1f       	adc	r25, r25
 5da:	1a 94       	dec	r1
 5dc:	69 f7       	brne	.-38     	; 0x5b8 <__udivmodsi4_loop>
 5de:	60 95       	com	r22
 5e0:	70 95       	com	r23
 5e2:	80 95       	com	r24
 5e4:	90 95       	com	r25
 5e6:	9b 01       	movw	r18, r22
 5e8:	ac 01       	movw	r20, r24
 5ea:	bd 01       	movw	r22, r26
 5ec:	cf 01       	movw	r24, r30
 5ee:	08 95       	ret

000005f0 <__umulhisi3>:
 5f0:	a2 9f       	mul	r26, r18
 5f2:	b0 01       	movw	r22, r0
 5f4:	b3 9f       	mul	r27, r19
 5f6:	c0 01       	movw	r24, r0
 5f8:	a3 9f       	mul	r26, r19
 5fa:	70 0d       	add	r23, r0
 5fc:	81 1d       	adc	r24, r1
 5fe:	11 24       	eor	r1, r1
 600:	91 1d       	adc	r25, r1
 602:	b2 9f       	mul	r27, r18
 604:	70 0d       	add	r23, r0
 606:	81 1d       	adc	r24, r1
 608:	11 24       	eor	r1, r1
 60a:	91 1d       	adc	r25, r1
 60c:	08 95       	ret

0000060e <__udivmodhi4>:
 60e:	aa 1b       	sub	r26, r26
 610:	bb 1b       	sub	r27, r27
 612:	51 e1       	ldi	r21, 0x11	; 17
 614:	07 c0       	rjmp	.+14     	; 0x624 <__udivmodhi4_ep>

00000616 <__udivmodhi4_loop>:
 616:	aa 1f       	adc	r26, r26
 618:	bb 1f       	adc	r27, r27
 61a:	a6 17       	cp	r26, r22
 61c:	b7 07       	cpc	r27, r23
 61e:	10 f0       	brcs	.+4      	; 0x624 <__udivmodhi4_ep>
 620:	a6 1b       	sub	r26, r22
 622:	b7 0b       	sbc	r27, r23

00000624 <__udivmodhi4_ep>:
 624:	88 1f       	adc	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	5a 95       	dec	r21
 62a:	a9 f7       	brne	.-22     	; 0x616 <__udivmodhi4_loop>
 62c:	80 95       	com	r24
 62e:	90 95       	com	r25
 630:	bc 01       	movw	r22, r24
 632:	cd 01       	movw	r24, r26
 634:	08 95       	ret

00000636 <strcpy>:
 636:	fb 01       	movw	r30, r22
 638:	dc 01       	movw	r26, r24
 63a:	01 90       	ld	r0, Z+
 63c:	0d 92       	st	X+, r0
 63e:	00 20       	and	r0, r0
 640:	e1 f7       	brne	.-8      	; 0x63a <strcpy+0x4>
 642:	08 95       	ret

00000644 <_exit>:
 644:	f8 94       	cli

00000646 <__stop_program>:
 646:	ff cf       	rjmp	.-2      	; 0x646 <__stop_program>
